plugins {
    id 'com.android.library'
    id 'maven-publish'
}

android {
    compileSdk 35
    namespace 'ir.ninjacoder.codesnap'
    
    defaultConfig {
        minSdk 21
        targetSdk 34
        versionCode 1
        versionName "1.1.1"
    }
    
    buildTypes {
        release {
            minifyEnabled false
        }
    }
    buildFeatures {
        viewBinding true
        
    }
    lint{
        checkReleaseBuilds false
    }
    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
    
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
}

dependencies {
    implementation("com.google.android.material:material:1.14.0-alpha06")
    runtimeOnly 'androidx.graphics:graphics-shapes:1.1.0-alpha01' 
    implementation 'androidx.constraintlayout:constraintlayout:2.2.1'
    implementation 'androidx.appcompat:appcompat:1.7.1'
    implementation 'org.antlr:antlr4:4.13.2'
    implementation 'com.google.code.gson:gson:2.13.1'
    implementation("io.noties.markwon:html:4.6.2")
    implementation("io.noties.markwon:image:4.6.2")
    implementation("com.github.bumptech.glide:glide:5.0.0-rc01")
    //annotationProcessor 'io.noties:prism4j-bundler:2.0.0'
    implementation 'io.noties.markwon:ext-tasklist:4.6.2'
    implementation 'io.noties.markwon:image-glide:4.6.2'
    implementation 'io.noties.markwon:core:4.6.2'
   // implementation("com.caverock:androidsvg:1.4")
    implementation("io.noties.markwon:syntax-highlight:4.6.2") {
    
      exclude group: "org.jetbrains", module: "annotations"
      exclude group: "org.jetbrains", module: "annotations-java5"
      
    }
}
afterEvaluate {
    publishing {
        publications {
            aar(MavenPublication) {
                artifact(bundleReleaseAar)

                groupId = 'com.github.HanzoDev1375'
                artifactId = 'CodeSnap'
                version = '1.1.1'

                pom {
                    withXml {
                        def dependenciesNode = asNode().appendNode('dependencies')
                        configurations.implementation.allDependencies.each { dep ->
                            if (dep.group && dep.name && dep.version) {
                                def dependencyNode = dependenciesNode.appendNode('dependency')
                                dependencyNode.appendNode('groupId', dep.group)
                                dependencyNode.appendNode('artifactId', dep.name)
                                dependencyNode.appendNode('version', dep.version)
                            }
                        }
                    }
                }
            }
        }
    }
}